package kr.happyjob.study.delcus.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.happyjob.study.delcus.model.DelCusModel;
import kr.happyjob.study.delcus.service.DelCusService;

@Controller
@RequestMapping("/delcus/")
public class DelCusController {
	
	@Autowired
	DelCusService delCusService;

	// Set logger
	private final Logger logger = LogManager.getLogger(this.getClass());

	// Get class name for logger
	private final String className = this.getClass().toString();
	
	@RequestMapping("delcusDirection.do")
	public String delcusDirection() throws Exception {
		logger.info("Start " + className + ".delcusDirection");
		logger.info("End " + className + ".delcusDirection");
		return "delcus/delcusDirection";
	}
	
	// 1. Delivery 리스트 조회
	@RequestMapping("delList.do")
	public String delList(@RequestParam Map<String, Object> map, Model model) throws Exception {
		logger.info("Start " + className + ".delList");
		
		int currentPage = Integer.parseInt((String)map.get("currentPage"));	// 현재 페이지 번호
		int pageSize = Integer.parseInt((String)map.get("pageSize"));		// 페이지 사이즈
		int pageIndex = (currentPage-1)*pageSize;	
		
		map.put("pageIndex", pageIndex);
		map.put("pageSize", pageSize);
		
		List<DelCusModel> list = delCusService.delList(map);
		model.addAttribute("list", list);
		
		int totalCount = delCusService.countDel();
		model.addAttribute("currentPage", currentPage);
		model.addAttribute("totalCount", totalCount);

		logger.info("End " + className + ".delList");
		return "delcus/delcusDirectionList";
	}
		
	// 2. Delivery 단 건 조회
	@RequestMapping("delDelList.do")
	public Map<String, Object> delSelectOne(@RequestParam Map<String,Object> map, Model model, @RequestParam("coNo") int coNo) throws Exception {
		logger.info("Start " + className + ".delSelectOne");
		System.out.println("******coNo : "+coNo);
		int currentPage = Integer.parseInt((String)map.get("currentPage"));	// 현재 페이지 번호
		int pageSize = Integer.parseInt((String)map.get("pageSize"));		// 페이지 사이즈
		int pageIndex = (currentPage-1)*pageSize;	
		
		map.put("pageIndex", pageIndex);
		map.put("pageSize", pageSize);
		
		Map<String, Object> returnMap = new HashMap<String,Object>();
		
		List<DelCusModel> list = delCusService.delSelectOne(coNo);
		returnMap.put("list", list);
		System.out.println("list : "+list);
		
		int totalCount = delCusService.countDel();
		returnMap.put("currentPage", currentPage);
		returnMap.put("totalCount", totalCount);
		
		logger.info("End " + className + ".delSelectOne");

		return returnMap;
	}
	
	
	// 4. Delivery 상태 변경
	@RequestMapping("deliverySts.do")
	public String deliverySts(@RequestParam Map<String,Object> map, Model model, @RequestParam("delNo") int delNo) throws Exception{
		
		logger.info("Start " + className + ".deliverySts");

		delCusService.deliverySts(delNo);
		model.addAttribute("delNo", delNo);
		
		List<DelCusModel> list = delCusService.delSelectOne(delNo);
		model.addAttribute("list", list);

		logger.info("Start " + className + ".deliverySts");
		
		return "delcus/delcusDirectionProdList";
	}

	               
}
